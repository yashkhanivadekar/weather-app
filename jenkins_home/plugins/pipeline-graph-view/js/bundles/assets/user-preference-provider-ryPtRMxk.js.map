{"version":3,"file":"user-preference-provider-ryPtRMxk.js","sources":["../../../../frontend/pipeline-console-view/pipeline-console/main/providers/user-preference-provider.tsx"],"sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\n// ENUMS\nexport enum StageViewPosition {\n  TOP = \"top\",\n  LEFT = \"left\",\n}\n\nexport enum MainViewVisibility {\n  BOTH = \"both\",\n  STAGES_ONLY = \"stagesOnly\",\n  GRAPH_ONLY = \"graphOnly\",\n}\n\n// TYPES\ninterface LayoutPreferences {\n  stageViewPosition: StageViewPosition;\n  mainViewVisibility: MainViewVisibility;\n  treeViewWidth: number;\n  stageViewWidth: number;\n  stageViewHeight: number;\n  setStageViewPosition: (position: StageViewPosition) => void;\n  setMainViewVisibility: (visibility: MainViewVisibility) => void;\n  setTreeViewWidth: (width: number) => void;\n  setStageViewWidth: (width: number) => void;\n  setStageViewHeight: (height: number) => void;\n  /**\n   * Returns true if the current window width is less than the mobile breakpoint.\n   * Used for disabling customization options in favor of a mobile-friendly layout.\n   */\n  isMobile: boolean;\n}\n\n// CONTEXT\nconst LayoutPreferencesContext = createContext<LayoutPreferences | undefined>(\n  undefined,\n);\n\n// KEYS\nconst LS_KEYS = {\n  stageViewPosition: \"layout.stageViewPosition\",\n  treeViewVisibility: \"layout.treeViewVisibility\",\n  stageViewVisibility: \"layout.stageViewVisibility\",\n  mainViewVisibility: \"layout.mainViewVisibility\",\n  treeViewWidth: \"layout.treeViewWidth\",\n  stageViewWidth: \"layout.stageViewWidth\",\n  stageViewHeight: \"layout.stageViewHeight\",\n};\n\n// HELPER\nconst loadFromLocalStorage = <T,>(key: string, fallback: T): T => {\n  if (typeof window === \"undefined\") return fallback;\n  try {\n    const value = window.localStorage.getItem(key);\n    if (value !== null) {\n      if (typeof fallback === \"number\") {\n        return Number(value) as T;\n      }\n      return value as unknown as T;\n    }\n  } catch (e) {\n    console.error(`Error loading localStorage key \"${key}\"`, e);\n  }\n  return fallback;\n};\n\nconst MOBILE_BREAKPOINT = 700;\n\n// PROVIDER\nexport const LayoutPreferencesProvider = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  const [windowWidth, setWindowWidth] = useState<number>(\n    typeof window !== \"undefined\" ? window.innerWidth : 1000,\n  );\n\n  const [persistedStageViewPosition, setStageViewPositionState] =\n    useState<StageViewPosition>(\n      loadFromLocalStorage(LS_KEYS.stageViewPosition, StageViewPosition.TOP),\n    );\n  const [persistedMainViewVisibility, setMainViewVisibilityState] =\n    useState<MainViewVisibility>(\n      loadFromLocalStorage(LS_KEYS.mainViewVisibility, MainViewVisibility.BOTH),\n    );\n\n  const [treeViewWidth, setTreeViewWidthState] = useState<number>(\n    loadFromLocalStorage(LS_KEYS.treeViewWidth, 300),\n  );\n  const [stageViewWidth, setStageViewWidthState] = useState<number>(\n    loadFromLocalStorage(LS_KEYS.stageViewWidth, 600),\n  );\n  const [stageViewHeight, setStageViewHeightState] = useState<number>(\n    loadFromLocalStorage(LS_KEYS.stageViewHeight, 250),\n  );\n\n  // Handle responsive override\n  const isMobile = windowWidth < MOBILE_BREAKPOINT;\n  const stageViewPosition = isMobile\n    ? StageViewPosition.TOP\n    : persistedStageViewPosition;\n  const mainViewVisibility = isMobile\n    ? MainViewVisibility.GRAPH_ONLY\n    : persistedMainViewVisibility;\n\n  // Save to localStorage only when not in mobile mode\n  useEffect(() => {\n    if (!isMobile) {\n      window.localStorage.setItem(\n        LS_KEYS.stageViewPosition,\n        persistedStageViewPosition,\n      );\n    }\n  }, [persistedStageViewPosition, isMobile]);\n\n  useEffect(() => {\n    if (!isMobile) {\n      window.localStorage.setItem(\n        LS_KEYS.mainViewVisibility,\n        persistedMainViewVisibility,\n      );\n    }\n  }, [persistedMainViewVisibility, isMobile]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      LS_KEYS.treeViewWidth,\n      treeViewWidth.toString(),\n    );\n  }, [treeViewWidth]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      LS_KEYS.stageViewWidth,\n      stageViewWidth.toString(),\n    );\n  }, [stageViewWidth]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      LS_KEYS.stageViewHeight,\n      stageViewHeight.toString(),\n    );\n  }, [stageViewHeight]);\n\n  // Update window width on resize\n  useEffect(() => {\n    const handleResize = () => setWindowWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const setStageViewPosition = (position: StageViewPosition) =>\n    setStageViewPositionState(position);\n  const setMainViewVisibility = (visibility: MainViewVisibility) =>\n    setMainViewVisibilityState(visibility);\n  const setTreeViewWidth = (width: number) => setTreeViewWidthState(width);\n  const setStageViewWidth = (width: number) => setStageViewWidthState(width);\n  const setStageViewHeight = (height: number) =>\n    setStageViewHeightState(height);\n\n  return (\n    <LayoutPreferencesContext.Provider\n      value={{\n        stageViewPosition,\n        mainViewVisibility,\n        treeViewWidth,\n        stageViewWidth,\n        stageViewHeight,\n        setStageViewPosition,\n        setMainViewVisibility,\n        setTreeViewWidth,\n        setStageViewWidth,\n        setStageViewHeight,\n        isMobile,\n      }}\n    >\n      {children}\n    </LayoutPreferencesContext.Provider>\n  );\n};\n\n// HOOK\nexport const useLayoutPreferences = (): LayoutPreferences => {\n  const context = useContext(LayoutPreferencesContext);\n  if (!context) {\n    throw new Error(\n      \"useLayoutPreferences must be used within a LayoutPreferencesProvider\",\n    );\n  }\n  return context;\n};\n"],"names":["StageViewPosition","MainViewVisibility","LayoutPreferencesContext","createContext","LS_KEYS","loadFromLocalStorage","key","fallback","value","e","MOBILE_BREAKPOINT","LayoutPreferencesProvider","children","windowWidth","setWindowWidth","useState","persistedStageViewPosition","setStageViewPositionState","persistedMainViewVisibility","setMainViewVisibilityState","treeViewWidth","setTreeViewWidthState","stageViewWidth","setStageViewWidthState","stageViewHeight","setStageViewHeightState","isMobile","stageViewPosition","mainViewVisibility","useEffect","handleResize","setStageViewPosition","position","setMainViewVisibility","visibility","setTreeViewWidth","width","setStageViewWidth","setStageViewHeight","height","jsx","useLayoutPreferences","context","useContext"],"mappings":"4DASY,IAAAA,GAAAA,IACVA,EAAA,IAAM,MACNA,EAAA,KAAO,OAFGA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,YAAc,aACdA,EAAA,WAAa,YAHHA,IAAAA,GAAA,CAAA,CAAA,EA0BZ,MAAMC,EAA2BC,EAAA,cAC/B,MACF,EAGMC,EAAU,CACd,kBAAmB,2BAGnB,mBAAoB,4BACpB,cAAe,uBACf,eAAgB,wBAChB,gBAAiB,wBACnB,EAGMC,EAAuB,CAAKC,EAAaC,IAAmB,CAC5D,GAAA,OAAO,OAAW,IAAoB,OAAAA,EACtC,GAAA,CACF,MAAMC,EAAQ,OAAO,aAAa,QAAQF,CAAG,EAC7C,GAAIE,IAAU,KACR,OAAA,OAAOD,GAAa,SACf,OAAOC,CAAK,EAEdA,QAEFC,EAAG,CACV,QAAQ,MAAM,mCAAmCH,CAAG,IAAKG,CAAC,CAAA,CAErD,OAAAF,CACT,EAEMG,EAAoB,IAGbC,EAA4B,CAAC,CACxC,SAAAC,CACF,IAEM,CACE,KAAA,CAACC,EAAaC,CAAc,EAAIC,EAAA,SACpC,OAAO,OAAW,IAAc,OAAO,WAAa,GACtD,EAEM,CAACC,EAA4BC,CAAyB,EAC1DF,EAAA,SACEV,EAAqBD,EAAQ,kBAAmB,KAAqB,CACvE,EACI,CAACc,EAA6BC,CAA0B,EAC5DJ,EAAA,SACEV,EAAqBD,EAAQ,mBAAoB,MAAuB,CAC1E,EAEI,CAACgB,EAAeC,CAAqB,EAAIN,EAAA,SAC7CV,EAAqBD,EAAQ,cAAe,GAAG,CACjD,EACM,CAACkB,EAAgBC,CAAsB,EAAIR,EAAA,SAC/CV,EAAqBD,EAAQ,eAAgB,GAAG,CAClD,EACM,CAACoB,EAAiBC,CAAuB,EAAIV,EAAA,SACjDV,EAAqBD,EAAQ,gBAAiB,GAAG,CACnD,EAGMsB,EAAWb,EAAcH,EACzBiB,EAAoBD,EACtB,MACAV,EACEY,EAAqBF,EACvB,YACAR,EAGJW,EAAAA,UAAU,IAAM,CACTH,GACH,OAAO,aAAa,QAClBtB,EAAQ,kBACRY,CACF,CACF,EACC,CAACA,EAA4BU,CAAQ,CAAC,EAEzCG,EAAAA,UAAU,IAAM,CACTH,GACH,OAAO,aAAa,QAClBtB,EAAQ,mBACRc,CACF,CACF,EACC,CAACA,EAA6BQ,CAAQ,CAAC,EAE1CG,EAAAA,UAAU,IAAM,CACd,OAAO,aAAa,QAClBzB,EAAQ,cACRgB,EAAc,SAAS,CACzB,CAAA,EACC,CAACA,CAAa,CAAC,EAElBS,EAAAA,UAAU,IAAM,CACd,OAAO,aAAa,QAClBzB,EAAQ,eACRkB,EAAe,SAAS,CAC1B,CAAA,EACC,CAACA,CAAc,CAAC,EAEnBO,EAAAA,UAAU,IAAM,CACd,OAAO,aAAa,QAClBzB,EAAQ,gBACRoB,EAAgB,SAAS,CAC3B,CAAA,EACC,CAACA,CAAe,CAAC,EAGpBK,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAe,IAAMhB,EAAe,OAAO,UAAU,EACpD,cAAA,iBAAiB,SAAUgB,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,EAAE,EAEL,MAAMC,EAAwBC,GAC5Bf,EAA0Be,CAAQ,EAC9BC,EAAyBC,GAC7Bf,EAA2Be,CAAU,EACjCC,EAAoBC,GAAkBf,EAAsBe,CAAK,EACjEC,EAAqBD,GAAkBb,EAAuBa,CAAK,EACnEE,EAAsBC,GAC1Bd,EAAwBc,CAAM,EAG9B,OAAAC,EAAA,IAACtC,EAAyB,SAAzB,CACC,MAAO,CACL,kBAAAyB,EACA,mBAAAC,EACA,cAAAR,EACA,eAAAE,EACA,gBAAAE,EACA,qBAAAO,EACA,sBAAAE,EACA,iBAAAE,EACA,kBAAAE,EACA,mBAAAC,EACA,SAAAZ,CACF,EAEC,SAAAd,CAAA,CACH,CAEJ,EAGa6B,EAAuB,IAAyB,CACrD,MAAAC,EAAUC,aAAWzC,CAAwB,EACnD,GAAI,CAACwC,EACH,MAAM,IAAI,MACR,sEACF,EAEK,OAAAA,CACT"}